[tox]
envlist = flake8,unit,owca_package,wrapper_package

[testenv]
basepython = python3.6

[testenv:flake8]
skip_install = True
deps = 
    flake8==3.7.7
commands = flake8 owca tests example workloads

[testenv:unit]
usedevelop = True
deps = 
    pytest==4.3.0
    pytest-cov==2.6.1
    setuptools_scm==3.2.0
commands = pytest --cov-report term-missing --cov=owca tests

[testenv:owca_package]
deps = 
    pex==1.6.3
    requests==2.21.0
    setuptools_scm==3.2.0
whitelist_externals =
    rm
    sh
skip_install = True
commands = 
    -sh -c 'rm -f .pex-build/owca.pex'
    pex . -v -R component-licenses --cache-dir=.pex-build {env:PEX_OPTIONS:} -o dist/owca.pex -m owca.main:main

[testenv:wrapper_package]
deps = 
    pex==1.6.3
    requests==2.21.0
    setuptools_scm==3.2.0
whitelist_externals =
    rm
    sh
skip_install = True
commands = 
    -sh -c 'rm -f .pex-build/*wrapper.pex'
    pex . -v -R component-licenses --cache-dir=.pex-build {env:PEX_OPTIONS:} -o dist/wrapper.pex -m owca.wrapper.wrapper_main
    pex . -v -R component-licenses --cache-dir=.pex-build {env:PEX_OPTIONS:} -o dist/example_workload_wrapper.pex -m owca.wrapper.parser_example_workload
    pex . -v -R component-licenses --cache-dir=.pex-build {env:PEX_OPTIONS:} -o dist/specjbb_wrapper.pex -m owca.wrapper.parser_specjbb
    pex . -v -R component-licenses --cache-dir=.pex-build {env:PEX_OPTIONS:} -o dist/ycsb_wrapper.pex -m owca.wrapper.parser_ycsb
    pex . -v -R component-licenses --cache-dir=.pex-build {env:PEX_OPTIONS:} -o dist/rpc_perf_wrapper.pex -m owca.wrapper.parser_rpc_perf
    pex . -v -R component-licenses --cache-dir=.pex-build {env:PEX_OPTIONS:} -o dist/tensorflow_benchmark_training_wrapper.pex -m owca.wrapper.parser_tensorflow_benchmark_training
    pex . -v -R component-licenses --cache-dir=.pex-build {env:PEX_OPTIONS:} -o dist/tensorflow_benchmark_prediction_wrapper.pex -m owca.wrapper.parser_tensorflow_benchmark_prediction
    pex . -v -R component-licenses --cache-dir=.pex-build {env:PEX_OPTIONS:} -o dist/mutilate_wrapper.pex -m owca.wrapper.parser_mutilate
    pex . -v -R component-licenses --cache-dir=.pex-build {env:PEX_OPTIONS:} -o dist/cassandra_stress_wrapper.pex -m owca.wrapper.parser_cassandra_stress
    pex . -v -R component-licenses --cache-dir=.pex-build {env:PEX_OPTIONS:} -o dist/stress_ng_wrapper.pex -m owca.wrapper.parser_stress_ng
