apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: wca
#  namespace: wca
#  labels:
#    name: owca-node-exporter
spec:
  selector:
    matchLabels:
      name: wca
  template:
    metadata:
      labels:
        name: wca

#    terminationGracePeriodSeconds: 10
    spec:
#      tolerations:
#      - key: node-role.kubernetes.io/master
#        effect: NoSchedule

#      initContainers:
#        - command:
#            - sh
#            - -c
#            - echo 0 > /proc/sys/kernel/perf_event_paranoid;
#            - sysctl -w proc.sys.kernel.perf_event_paranoid=0;
#            - chown -R owca:owca /sys/fs/resctrl/mon_groups
#            # Create owca group to enable running OWCA as non-root
#              #RUN groupadd owca
#              # Create owca user to enable running OWCA as non-root
#              #RUN adduser -p zxc owca
#              #RUN usermod -aG wheel owca
#
#              # Changing ownership of mon_groups enables creating mon_groups by non-root user
#            #RUN chown -R owca:owca /sys/fs/resctrl/mon_groups
#          image: centos:7
#          imagePullPolicy: IfNotPresent
#          name: sysctl
#          securityContext:
#            privileged: true
      hostPID: true
      hostIPC: true
      hostNetwork: true
      containers:
      - name: wca
        image: 100.64.176.12:80/wca:dac1aab9e8bd8b454836a7dd51fc81d8ee1944d3
        securityContext:
          privileged: true
        env:
          - name: LOG
            value: debug
          - name: OWN_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: ENV_UNIQ_ID
            value: "'1'"
          - name: CONFIG
            value: /etc/owca/wca_config.yml
        resources:
      #       limits:
      #         memory: 200Mi
          requests:
            cpu: 500m
            memory: 500Mi
        volumeMounts:
          - name: kubelet-cert
            mountPath: /etc/kubernetes/ssl/
            readOnly: true
          - name: wcaconfig
            mountPath: /etc/owca/
          - name: wcaconfig2
            mountPath: /etc/wca/
          - name: varlibwca
            mountPath: /var/lib/wca
          - name: logstorage
            mountPath: /var/log
          - name: cgroup
            mountPath: /sys/fs/cgroup/
      - name: node-exporter
        image: prom/node-exporter@sha256:ffc3e0adf58771cb2097aa0b074a6fe68b4925ba75c2e1c41f41ae656eebee11
        securityContext:
          privileged: true
        args:
          - --collector.procfs
          - /host/proc
          - --collector.sysfs
          - /host/sys
          - --collector.filesystem.ignored-mount-points
          - '"^/(sys|proc|dev|host|etc)($|/)"'
          - --collector.textfile.directory
          - /var/lib/wca
        ports:
          - containerPort: 9100
            protocol: TCP
        resources:
  #        limits:
  #          cpu: 100m
  #          memory: 100Mi
          requests:
            cpu: 1
            memory: 1
        volumeMounts:
          - name: varlibwca
            mountPath: /var/lib/wca
          - name: logstorage
            mountPath: /var/log
          - name: dev
            mountPath: /host/dev
          - name: proc
            mountPath: /host/proc
          - name: sys
            mountPath: /host/sys
          - name: rootfs
            mountPath: /rootfs
      volumes:
        - name: kubelet-cert
          secret:
            secretName: apiserver-kubelet-key-crt
        - name: wcaconfig
          configMap:
            name: wca-config
        - name: logstorage
          hostPath:
            path: /var/log
        - name: wcaconfig2
          hostPath:
            path: /etc/wca/
        - name: varlibwca
          hostPath:
            path: /var/lib/wca
        # control cgroup
        - name: cgroup
          hostPath:
            path: /sys/fs/cgroup/
        #      node_exporter
        - name: proc
          hostPath:
            path: /proc
        - name: dev
          hostPath:
            path: /dev
        - name: sys
          hostPath:
            path: /sys
        - name: rootfs
          hostPath:
            path: /
