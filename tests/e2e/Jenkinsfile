pipeline {
    agent any
    environment {
        PLAYBOOK='workloads/run_workloads.yaml'
        PROMETHEUS='http://100.64.176.12:9090'
        BUILD_COMMIT = "${GIT_COMMIT}"
        EXTRA_ANSIBLE_PARAMS = ""
        LABELS="{additional_labels: {build_number: \"${BUILD_NUMBER}\", build_node_name: \"${NODE_NAME}\", build_commit: \"${GIT_COMMIT}\"}}"
    }
    stages {
        stage('Kubernetes environment') {
            agent { label 'kubernetes' }
            environment {
                INVENTORY='tests/e2e/demo_scenarios/common/inventory-kubernetes.yaml'
                KUBERNETES_HOST='100.64.176.34'
                CRT_PATH = '/etc/kubernetes/ssl/'
                CONFIG = 'wca_config_kubernetes.yaml'
            }
            steps {
                print('Environment variables for Kubernetes are set.')
            }
        }
        stage('Mesos environment') {
            agent { label 'mesos' }
            environment {
                INVENTORY='tests/e2e/demo_scenarios/common/inventory-mesos.yaml'
                MESOS_MASTER_HOST='100.64.176.23'
                CONFIG = 'wca_config_mesos.yaml'
            }
            steps {
                print('Environment variables for Mesos are set.')
            }
        }
        stage('Start wca') {
            steps {
                print('Reconfiguring wca...')
                sh 'sudo cp ${WORKSPACE}/tests/e2e/demo_scenarios/common/${CONFIG} ${WORKSPACE}/prm/demo_scenarios/common/wca_config.yml.tmp'
                contentReplace(
                    configs: [
                        fileContentReplaceConfig(
                            configs: [
                                fileContentReplaceItemConfig( search: 'BUILD_COMMIT', replace: "${GIT_COMMIT}", matchCount: 0),
                                fileContentReplaceItemConfig( search: 'BUILD_NUMBER', replace: "${BUILD_NUMBER}", matchCount: 0),
                                fileContentReplaceItemConfig( search: 'BUILD_SCENARIO', replace: "${BUILD_SCENARIO}", matchCount: 0),
                                fileContentReplaceItemConfig( search: 'CRT_PATH', replace: "${CRT_PATH}", matchCount: 0)
                            ],
                            fileEncoding: 'UTF-8',
                            filePath: "${WORKSPACE}/prm/demo_scenarios/common/wca_config.yml.tmp")
                        ])
                sh'''
                sudo cp ${WORKSPACE}/tests/e2e/demo_scenarios/common/wca_config.yml.tmp /etc/wca/wca_config.yml
                sudo cp ${WORKSPACE}/dist/wca-prm.pex /usr/bin/wca.pex
                sudo systemctl restart wca
                '''
                sleep 60
                echo 'Restart wca...'
                sh 'sudo systemctl status wca'
            }
            post {
                always {
                    print('Stopping wca...')
                    sh 'sudo systemctl stop wca'
                }
            }
        }
    }
}