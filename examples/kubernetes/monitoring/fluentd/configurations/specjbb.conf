<filter kubernetes.var.log.containers.specjbb-controller**>
  @type parser
  key_name log
  reserve_data true
  <parse>
    @type multi_format
    <pattern>
        format regexp
        expression /TotalPurchase,\s*(?<Success>\d+),\s*(?<Partial>\d+),\s*(?<Failed>\d+),\s*(?<SkipFail>\d+),\s*(?<Probes>\d+),\s*(?<Samples>\d+),\s*(?<min>\d+),\s*(?<p50>\d+),\s*(?<p90>\d+),\s*(?<p95>\d+),\s*(?<p99>\d+),\s*(?<max>\d+),\s*/
        types Success:int, Partial:int, Failed:int, SkipFail:int, Probes:int, Samples:int, minp50:int, p90:int, p95:int, p99:int, max:int
    </pattern>
    <pattern>
        format regexp
        expression /\(rIR:aIR:PR = (?<rIR>\d+):(?<aIR>\d+):(?<PR>\d+)\)\s*\(tPR = (?<tPR>\d+)\)/
        types rIR:int, aIR:int, PR:int, tPR:int
    </pattern>
    time_format %s
  </parse>
</filter>

<filter kubernetes.var.log.containers.specjbb-controller**>
  @type prometheus
  <metric>
    name apm__specjbb_rIR
    type gauge
    desc Specjbb rIR
    key rIR
    <labels>
      task_name ${task_name}
      node ${hostname}
      app $.kubernetes.labels.app
      podname $.kubernetes.pod_name
      namespace $.kubernetes.namespace_name
    </labels>
  </metric>
</filter>

<filter kubernetes.var.log.containers.specjbb-controller**>
  @type prometheus
  <metric>
    name apm__specjbb_p99
    type gauge
    desc Specjbb 99 percentile
    key p99
    <labels>
      task_name ${task_name}
      node ${hostname}
      app $.kubernetes.labels.app
      podname $.kubernetes.pod_name
      namespace $.kubernetes.namespace_name
    </labels>
  </metric>
</filter>