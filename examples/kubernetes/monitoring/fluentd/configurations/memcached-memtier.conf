<filter kubernetes.var.log.containers.memcached-memtier**>
  @type parser
  key_name log
  reserve_data true
  <parse>
    @type regexp
    expression /^\[RUN (.*?)\](.*?)threads:(.*?)(?<memcached_memtier_cur_ops>\d+) ops,(.*?)(?<memcached_memtier_ops_sec>\d+)(.*?)ops\/sec, (?<memtier_mb_per_sec>\d+.\d*)\w{1,2}\/sec(.*?),\s+(?<memcached_memtier_cur_latency>\d+.\d*)(.*?)msec latency/
    types memcached_memtier_cur_ops:integer, memcached_memtier_ops_sec:integer, memcached_memtier_cur_latency:float
  </parse>
</filter>

<filter kubernetes.var.log.containers.memcached-memtier**>
  @type prometheus
  <metric>
    name apm_memcached_memtier_scan_operations  # total operations not operations per second
    type gauge # it is a counter!
    desc OPS
    key memcached_memtier_cur_ops
    <labels>
      task_name ${task_name}
      node ${hostname}
      app $.kubernetes.labels.app
      podname $.kubernetes.pod_name
      namespace $.kubernetes.namespace_name
    </labels>
  </metric>
</filter>

<filter kubernetes.var.log.containers.memcached-memtier**>
  @type prometheus
  <metric>
    name apm_memcached_memtier_scan_ops_sec
    type gauge
    desc OPS_SEC
    key memcached_memtier_ops_sec
    <labels>
      task_name ${task_name}
      node ${hostname}
      app $.kubernetes.labels.app
      podname $.kubernetes.pod_name
      namespace $.kubernetes.namespace_name
    </labels>
  </metric>
</filter>

<filter kubernetes.var.log.containers.memcached-memtier**>
  @type prometheus
  <metric>
    name apm_memcached_memtier_scan_latency
    type gauge
    desc latency
    key memcached_memtier_cur_latency
    <labels>
      task_name ${task_name}
      node ${hostname}
      app $.kubernetes.labels.app
      podname $.kubernetes.pod_name
      namespace $.kubernetes.namespace_name
    </labels>
  </metric>
</filter>

<filter kubernetes.var.log.containers.memcached-memtier**>
  @type prometheus
  <metric>
    name apm_memcached_memtier_stdout_lines
    type counter
    desc stdout_lines
    <labels>
      task_name ${task_name}
      node ${hostname}
      app $.kubernetes.labels.app
      podname $.kubernetes.pod_name
      namespace $.kubernetes.namespace_name
    </labels>
  </metric>
</filter>
