apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: specjbb
spec:
  serviceName: specjbb
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app: specjbb
  template:
    metadata:
      labels:
        app: specjbb
    spec:
      nodeSelector:
        #goal: service
        kubernetes.io/hostname: node37
      terminationGracePeriodSeconds: 0
      containers:
        - name: controler
          env:
            - name: THREADS
              valueFrom: {configMapKeyRef: { name: specjbb, key: threads }}
            - name: cpus
              valueFrom: {configMapKeyRef: { name: specjbb, key: cpus }}
            - name: memory
              valueFrom: {configMapKeyRef: { name: specjbb, key: memory }}
            - name: report_interval
              valueFrom: {configMapKeyRef: { name: specjbb, key: report_interval}}
            - name: extra
              valueFrom: {configMapKeyRef: { name: specjbb, key: extra }}
            - name: base_cores
              valueFrom: {configMapKeyRef: { name: specjbb, key: base_cores }}
            - name: use_numa_binding
              valueFrom: {configMapKeyRef: { name: specjbb, key: use_numa_binding }}
            - name: experiment_name
              valueFrom: {configMapKeyRef: { name: specjbb, key: experiment_name }}
            - name: id_env
              valueFrom: {configMapKeyRef: { name: specjbb, key: id_env }}
            - name: specjbb_jar
              valueFrom: {configMapKeyRef: { name: specjbb, key: specjbb_jar }}
            # Java
            ## java_opts_c
            - name: contmeg
              valueFrom: {configMapKeyRef: { name: specjbb-java, key: contmeg }}
            - name: contnew
              valueFrom: {configMapKeyRef: { name: specjbb-java, key: contnew }}
            - name: ParallelGCThreads
              valueFrom: {configMapKeyRef: { name: specjbb-java, key: ParallelGCThreads }}
            ## spec_opts_c
            - name: group_count
              valueFrom: {configMapKeyRef: { name: specjbb-java, key: group_count }}

          image: specjbb
          command:
            - sh
            - -c
            - >
              java
              -Xmx$(contmeg)G -Xms$(contmeg)G -Xmn$(contnew)G -XX:+AlwaysPreTouch -XX:ParallelGCThreads=$(ParallelGCThreads)
              -Dspecjbb.group.count=1 -Dspecjbb.txi.pergroup.count=1 -Dspecjbb.controller.rtcurve.warmup.step=0.5
              -Dspecjbb.forkjoin.workers=1
              -jar /home/specjbb/specjbb2015.jar
              -m distcontroller  -v

        - name: backend
          image: specjbb
          command:
            - sh
            - -c
            - >
              java -Xms4g -Xmx4g -Xmn2g -XX:-UseBiasedLocking -XX:+UseParallelOldGC -jar /home/specjbb/specjbb2015.jar -m backend -G GRP1 -J JVM_A

        - name: injector
          image: specjbb
          command:
            - sh
            - -c
            - >
              java -jar /home/specjbb/specjbb2015.jar -m txinjector -G GRP1 -J JVM_B
#              cores=`cat /proc/cpuinfo | grep processor | wc -l`;
#              echo $cores;
#              zones=2;
#              custom_config='specjbb.controller.rtcurve.step=0.01'
#
#              java_opts_c="-Xmx%(contmeg)s -Xms%(contmeg)s -Xmn%(contnew)s -XX:+AlwaysPreTouch -XX:ParallelGCThreads=2" % dict(contmeg=contmeg, contnew=contnew)
#              java_opts_ti="-Xmx%(tximeg)s -Xms%(tximeg)s -Xmn%(txinew)s -XX:+AlwaysPreTouch -XX:ParallelGCThreads=2" % dict(tximeg=tximeg, txinew=txinew)
#
#              spec_opts_c="-Dspecjbb.group.count={group_count} -Dspecjbb.txi.pergroup.count=1 -Dspecjbb.controller.rtcurve.warmup.step=0.5".format(group_count=str(group_count))
#              spec_opts_c_extra=' '.join(['-D%s'%opt for opt in custom_config.splitlines() if opt])
#              spec_opts_ti=""
#              spec_opts_be="-Dspecjbb.forkjoin.workers={worker_size} -Dspecjbb.mapreducer.pool.size={mr_size}".format(worker_size=str(worker_size), mr_size=str(mr_size))
#
#              java {java_opts_c} {spec_opts_c} {spec_opts_c_extra} -jar /home/specjbb/specjbb2015.jar -m MULTICONTROLLER -l {report_level};
#              # rename_archive
#              mv /home/specjbb/result/specjbb2015-* /home/specjbb/result/$id_env
        - name: buzzy
          image: specjbb
          command:
            - sh
            - -c
            - >
              sleep 100000
          volumeMounts:
            - name: specjbb-config
              mountPath: /var/specjbb/

      volumes:
        - name: specjbb-config
          configMap:
            name: specjbb-config
        - name: wca-specjbb-config
          emptyDir: {}

  # required for workaround bug with kustomize https://github.com/kubernetes-sigs/kustomize/issues/504
  # when using commonLabels
  volumeClaimTemplates: []

