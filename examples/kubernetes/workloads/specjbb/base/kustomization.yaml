resources:
  - controller.yaml
  - group.yaml

configMapGenerator:
  - name: specjbb
    literals:
       # 'specjbb.group.count' must be set by env group_count below
      - group_count=1
      - report_interval=1
      - hbir=
#      - base_cores=56 #int(os.environ['CORES'])the same as cores (used in mesos)
      - cores=56
##      - use_numa_binding= #int(os.environ['USE_NUMA_BINDING'])  # 0 | 1
##      - experiment_name= #str(os.environ['EXPERIMENT_NAME'])  # no | yes
      - id_env= #str(os.environ['ID'])
      # AUTO DISCOVERY
      # cores=`cat /proc/cpuinfo | grep processor | wc -l` or `nproc`
      # zones=`numactl -H | grep cpus | wc -l`
      - zones=2  # num of numa nodes
      - report_level=0

  - name: specjbb-java
    literals:
      # >> xmx == max allocation pool memory <<
      # >> xms == initial allocation pool memory <<
      # >> xmn == the size of the heap for the young generation <<
      # https://stackoverflow.com/questions/14763079/what-are-the-xms-and-xmx-parameters-when-starting-jvm
      # https://stackoverflow.com/questions/23880891/what-does-xmn-jvm-option-stands-for
      - ParallelGCThreads=2
      # for the controller
      - contmeg="2g"
      - contnew="1536m"
      # for the injector
      - tximeg_numeric_gb=2
      - tximeg="2g"
      - txinew="1536m"
      # for the backend
      - backendimeg='18000M'
      - backendinew='16920M'
      - gc_size='12'
      - worker_size='12'


  - name: specjbb-config
    literals:
      # 'specjbb.group.count' set by number replicas groups and controllers
      - specjbb.txi.pergroup.count=1
      - specjbb.controller.rtcurve.warmup.step=0.5
      - specjbb.controller.rtcurve.step=1
      - specjbb.controller.type=PRESET

patchesStrategicMerge:
  - replicas.yaml
