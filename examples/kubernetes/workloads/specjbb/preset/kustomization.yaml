configMapGenerator:
  - name: specjbb
    literals:
      - threads=4
      - cpus=0-1000
      - memory=16g
      - report_interval=1
      - extra=
      - enable_worker_size=no #os.environ.get('ENABLE_WORKER_SIZE', 'no')
      - hbir= #os.environ.get('HBIR')
#      - base_cores=56 #int(os.environ['CORES'])the same as cores (used in mesos)
      - cores=96
##      - use_numa_binding= #int(os.environ['USE_NUMA_BINDING'])  # 0 | 1
##      - experiment_name= #str(os.environ['EXPERIMENT_NAME'])  # no | yes
      - id_env= #str(os.environ['ID'])
      # AUTO DISCOVERY
      # cores=`cat /proc/cpuinfo | grep processor | wc -l` or `nproc`
      # zones=`numactl -H | grep cpus | wc -l`
      - zones=2  # num of numa nodes

  - name: specjbb-java
    literals:
      # >> xmx == max allocation pool memory <<
      # >> xms == initial allocation pool memory <<
      # >> xmn == the size of the heap for the young generation <<
      # https://stackoverflow.com/questions/14763079/what-are-the-xms-and-xmx-parameters-when-starting-jvm
      # https://stackoverflow.com/questions/23880891/what-does-xmn-jvm-option-stands-for
      - ParallelGCThreads=2
      # for the controller
      - contmeg="2g"
      - contnew="1536m"
      # for the TxI
      - tximeg_numeric_gb=2
      - tximeg="2g"
      - txinew="1536m"
      # for the backend
      # -Xmx%(backendimeg)s -Xms%(backendimeg)s -Xmn%(backendinew)s -XX:ParallelGCThreads=%(gc_size)s
      # -Xmx18000M -Xms18000M -Xmn16920M -XX:+AlwaysPreTouch -XX:ParallelGCThreads=12
      - backendimeg='18000M'
      - backendinew='16920M'
      - gc_size='12'
      - worker_size='12'
      #JMX
      - -Dcom.sun.management.jmxremote.port=8686
      - -Dcom.sun.management.jmxremote.authenticate=false
      - -Dcom.sun.management.jmxremote.ssl=false