apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: memcached-mutilate
spec:
  replicas: 0
  serviceName: memcached-mutilate
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: memcached-mutilate
  template:
    metadata:
      labels:
        app: memcached-mutilate
    spec:
      terminationGracePeriodSeconds: 0
      nodeName: node100
      containers:
        - name: memcached
          image: memcached
          envFrom:
            - configMapRef:
                name: memcached
          env:
            # Downward API
            - name: CORES_REQUEST
              valueFrom:
                resourceFieldRef:
                  containerName: memcached
                  resource: requests.cpu
            - name: MEM_REQUEST
              valueFrom:
                resourceFieldRef:
                  containerName: memcached
                  resource: requests.memory
          command:
            - sh
            - -c
            - >
              memcached
              -t $CORES_REQUEST
              -m $MEM_REQUEST
              -u root
              $extra

        - name: mutilate
          image: mutilate
          envFrom:
            - configMapRef:
                name: mutilate
          env:
            # Downward API
            - name: podname
              valueFrom: {fieldRef: {fieldPath: metadata.name}}
            - name: CORES_REQUEST
              valueFrom:
                resourceFieldRef:
                  containerName: mutilate
                  resource: requests.cpu
            - name: MEM_REQUEST
              valueFrom:
                resourceFieldRef:
                  containerName: mutilate
                  resource: requests.memory
          command:
            - bash
            - -c
            - >
              echo sleeping...;
              sleep 2;

              shopt -s extglob;

              target='127.0.0.1';
              echo targeting: $target;

              echo loading...;
              ./mutilate
              -T 1
              -s ${target}:11211
              --loadonly
              -r $load_records
              -V $valuesize
              -v

              echo started...;
              ./mutilate
              -c $connections
              -T $threads
              -t $time
              -s ${target}:11211
              --noload
              --scan $qps:$qps:0
              -r $records
              -V $valuesize
              -u $update
              $extra

  # required for workaround bug with kustomize https://github.com/kubernetes-sigs/kustomize/issues/504
  # when using commonLabels
  # fixed in 2.1.0 https://github.com/kubernetes-sigs/kustomize/commit/c470982ce5b96da82a757f088a842bb05d3bcdb4
  volumeClaimTemplates: []
