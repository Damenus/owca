apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: hammerdb
  labels:
    app: hammerdb
spec:
  serviceName: mysql
  replicas: 0
  selector:
    matchLabels:
      app: hammerdb
  template:
    metadata:
      labels:
        app: hammerdb
    spec:
      nodeSelector:
        goal: load_generator
      initContainers:
      - name: change-config-workload
        image: busybox
        envFrom:
          - configMapRef:
              name: hammerdb
        env:
          - name: podname
            valueFrom: {fieldRef: {fieldPath: metadata.name}}
        command:
          - /bin/sh
          - -c
          - >
            identifier=${podname#hammerdb-};
            service=${identifier%-[+[:digit:]]};

            sed
            -e "s/MYSQL_HOST/mysql-${identifier}.mysql-${service}/"
            -e "s/WORKER_NUMBER/$number_runners/"
            /etc/config/workload.tcl > /etc/hammerdb/config/workload.tcl;

            sed
            -e "s/MYSQL_HOST/mysql-${identifier}.mysql-${service}/"
            -e "s/COUNT_WARE/${count_ware}/"
            -e "s/WORKER_BUILDING_SCHEMA/$worker_building_schema/"
            /etc/config/build_workload.tcl > /etc/hammerdb/config/build_workload.tcl

        volumeMounts:
          - name: config-volume
            mountPath: /etc/config
          - name: changed-config-volume
            mountPath: /etc/hammerdb/config

      - name: wait-for-database-init
        image: mysql_tpm_gauge
        env:
          - name: podname
            valueFrom: {fieldRef: {fieldPath: metadata.name}}
        command:
          - /bin/sh
          - -c
          - >
            identifier=${podname#hammerdb-};
            service=${identifier%-[+[:digit:]]};

            test=0;
            until [ $test -eq 1 ];
            do
              test=$(mysqladmin -u testuser -h mysql-${identifier}.mysql-${service} -ptestpassword ping | wc -l | tail -1);
              echo $test;
            done

      - name:  initialize-database-schema
        image: hammerdb
        command: [ "./hammerdbcli", "auto" ]
        args:  ["/etc/hammerdb/config/build_workload.tcl" ]
        volumeMounts:
          - name: changed-config-volume
            mountPath: /etc/hammerdb/config

      containers:
      - name: hammerdb
        image: hammerdb
        command: [ "./hammerdbcli", "auto" ]
        args:  ["/etc/hammerdb/config/workload.tcl" ]
        volumeMounts:
          - name: changed-config-volume
            mountPath: /etc/hammerdb/config

      - name: mysql-tpm-gauge
        image: mysql_tpm_gauge
        env:
          - name: podname
            valueFrom: {fieldRef: {fieldPath: metadata.name}}
        command:
          - bash
          - -c
          - >
            identifier=${podname#hammerdb-};
            service=${identifier%-[+[:digit:]]};

            set -x;
            python3 -u /mysql-tpm-gauge/mysql_tpm_gauge.py --host mysql-${identifier}.mysql-${service}

      volumes:
      - name: config-volume
        configMap:
          name: mysql-tpm-gauge-tcl-script
      - name: changed-config-volume
        emptyDir: {}

  volumeClaimTemplates: []
