apiVersion: v1
kind: Pod
metadata:
  name: wca
  labels:
    app: myapp
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9100"
spec:
  hostPID: true
  hostIPC: true
  hostNetwork: true
  nodeSelector:
    own_ip: 100.64.176.34

  initContainers:
    - name: init-wca
      image: centos:7
      imagePullPolicy: IfNotPresent
      securityContext:
        privileged: true
      command:
        - cat
        - /etc/wca/wca_config.yml

#        - sh
#        - -c
#        - echo
#        - 'runner: !DetectionRunner
#            rdt_enabled: false
#            node: !KubernetesNode
#              # We support two options: cgroupfs, systemd.
#              cgroup_driver: cgroupfs
#
#              # Fill needed PATH to key and certificate to access kubelet.
#              client_private_key: "/etc/kubernetes/ssl/apiserver-kubelet-client.key" #"$PATH/apiserver-kubelet-client.key"
#              client_cert: "/etc/kubernetes/ssl/apiserver-kubelet-client.crt" # "$PATH/apiserver-kubelet-client.crt"
#
#              # If the kubelete agent does not listen on localhost,
#              #   the endpoint must be provided.
#              kubelet_endpoint: "https://100.64.176.33:10250" # {{own_ip}}
#
#              # List of namespaces to monitor pods in.
#              monitored_namespaces: ["default"]
#
#
#            metrics_storage: !LogStorage
#              overwrite: True
#              output_filename: metrics.prom
#            anomalies_storage: !LogStorage
#              overwrite: True
#              output_filename: anomalies.prom
#
#            detector: !ExampleDetector
#
#            extra_labels:
#              env_uniq_id: "34"
#              own_ip: "34"'
#        - >
#        - /etc/wca/wca_config.yml


      volumeMounts:
        - name: wcaconfig
          mountPath: /etc/wca/


  containers:
    - name: wca
      image: 100.64.176.12:80/wca:df7e4d03742dfc0b28e16e3c09141a1e183d6564
      securityContext:
        privileged: true
      env:
        - name: LOG
          value: debug
        - name: OWN_IP
          value: status.podIP
        - name: ENV_UNIQ_ID
          value: "1"
      resources:
#        limits:
#          memory: 200Mi
        requests:
          cpu: 500m
          memory: 500Mi
      volumeMounts:
        - name: kubeletcert
          mountPath: /etc/kubernetes/ssl/
        - name: wcaconfig
          mountPath: /etc/wca/
        - name: varlibwca
          mountPath: /var/lib/wca
        - name: logstorage
          mountPath: /var/log
        - name: cgroup
          mountPath: /sys/fs/cgroup/
    - name: node-exporter
      image: prom/node-exporter@sha256:ffc3e0adf58771cb2097aa0b074a6fe68b4925ba75c2e1c41f41ae656eebee11
      securityContext:
        privileged: true
      args:
        - --collector.procfs
        - /host/proc
        - --collector.sysfs
        - /host/sys
        - --collector.filesystem.ignored-mount-points
        - '"^/(sys|proc|dev|host|etc)($|/)"'
        - --collector.textfile.directory
        - /var/lib/wca
      ports:
        - containerPort: 9100
          protocol: TCP
      resources:
#        limits:
#          cpu: 100m
#          memory: 100Mi
        requests:
          cpu: 1
          memory: 1
      volumeMounts:
        - name: varlibwca
          mountPath: /var/lib/wca
        - name: logstorage
          mountPath: /var/log
        - name: dev
          mountPath: /host/dev
        - name: proc
          mountPath: /host/proc
        - name: sys
          mountPath: /host/sys
        - name: rootfs
          mountPath: /rootfs
  volumes:
    - name: kubeletcert
      hostPath:
        path: /etc/kubernetes/ssl/
    - name: wcaconfig
      configMap:
        name: wca-config
    - name: logstorage
      hostPath:
        path: /var/log
    - name: varlibwca
      hostPath:
        path: /var/lib/wca
    # control cgroup
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup/
    #      node_exporter
    - name: proc
      hostPath:
        path: /proc
    - name: dev
      hostPath:
        path: /dev
    - name: sys
      hostPath:
        path: /sys
    - name: rootfs
      hostPath:
        path: /
